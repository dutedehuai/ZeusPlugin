apply plugin: 'com.android.application'

//start----------补丁相关，使用gradle插件，如果宿主是只运行于android 4.4及以上可以不添加这些代码------------------
apply plugin: 'patch-gradle-plugin'
//end------------补丁相关，使用gradle插件，如果宿主是只运行于android 4.4及以上可以不添加这些代码------------------
apply plugin: 'jar-gradle-plugin'//生成jar包插件

//为了可以使用public.xml来固定宿主的资源ID
apply from: 'public-xml.gradle'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'


    defaultConfig {
        applicationId "tencent.com.chacezesuapp"
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':ZeusPlugin')
}

//start----------补丁相关，使用gradle插件，如果宿主是只运行于android 4.4及以上可以不添加这些代码------------------
//如果enable为true则表明打出的包会在每个类的构造函数中添加如下代码:if (Boolean.FALSE.booleanValue())System.out.println(Predicate.class);
patchPlugin{
    enable = true
}
//end------------补丁相关，使用gradle插件，如果宿主是只运行于android 4.4及以上可以不添加这些代码------------------

//start----------插件相关的，用来生成sdk-jar的------------------
//具体使用参见https://github.com/iReaderAndroid/buildJar
BuildJar{
    //输出目录
    outputFileDir= project.buildDir.path+"/jar"
    //输出原始jar包名
    outputFileName="chaceapp_sdk.jar"
    //输出混淆jar包名
    outputProguardFileName="chaceapp_sdk_proguard.jar"
    //混淆配置
    proguardConfigFile="proguard-rules.pro"
    //是否需要默认的混淆配置proguard-android.txt
    needDefaultProguard=true
//    applyMappingFile="originMapping/mapping.txt"
    //需要输出jar的包名列表,当此参数为空时，则默认全项目输出,支持多包,如 includePackage=['com/adison/testjarplugin/include','com/adison/testjarplugin/include1'...]
//    includePackage=['com/adison/testjarplugin/include']
//    //不需要输出jar的jar包列表,如['baidu.jar','baidu1.jar'...]
//    excludeJar=[]
//    //不需要输出jar的类名列表,如['baidu.calss','baidu1.class'...]
//    excludeClass=['com/adison/testjarplugin/TestExcude.class']
//    //不需要输出jar的包名列表,如 excludePackage=['com/adison/testjarplugin/exclude','com/adison/testjarplugin/exclude1'...]
//    excludePackage=['com/adison/testjarplugin/exclude']
}

//end----------插件相关的，用来生成sdk-jar的------------------